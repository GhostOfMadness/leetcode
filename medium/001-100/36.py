"""
Valid Sudoku.

Проверить на валидность текущее состояние поля судоку.

Заведем 2 массива, col_sets и cube_sets, в которых будем хранить множества
значений для столбцов и квадратов 3 * 3 соответственно. col_sets будет
состоять из 9 значений, cube_sets - двумерный массив, размером 3 * 3.

Проходимся циклом по строкам. Для каждой строчки создаем свое множество
для хранения значений. Если ячейка пуста, то есть там стоит ".", то переходим
к следующей итерации. Иначе проверяем, что этого значения нет в множестве
для строки, для столбца (для этого проверяем множетсво на j-м индекск в
col_sets) и в квадрате 3 * 3. Для определения квадрата, к которому принадлежит
ячейка, нужно взять целые части от деления номеров ее строки и столбца на 3.
Если хотя бы одно из условий нарушается, то поле неверно, то есть возвращаем
False. Иначе заносим текущее значение во множества для строки, столбца
и квадрата и переходим к следующему значению.

Лучшее решение: 0 ms, 17.91 Mb
"""


class Solution:

    def isValidSudoku(self, board: list[list[str]]) -> bool:
        col_sets = [set() for _ in range(9)]
        cube_sets = [[set() for i in range(3)] for j in range(3)]
        for row in range(9):
            row_set = set()
            for col in range(9):
                val = board[row][col]
                if val == '.':
                    continue
                false_cond = (
                    val in row_set
                    or val in col_sets[col]
                    or val in cube_sets[row // 3][col // 3]
                )
                if false_cond:
                    return False
                row_set.add(val)
                col_sets[col].add(val)
                cube_sets[row // 3][col // 3].add(val)
        return True
