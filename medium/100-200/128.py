"""
Longest Consecutive Sequence.

Дан массив целых чисел nums. Найти наибольшую длину последовательности,
которую можно получить из элементов массива, при условии, что числа в этой
последовательности идут строго друг за другом на числовой прямой.

Создаем множество на основе исходного массива, так как повторы элементов
точно не будут включены в последовательность и их можно опустить. До тех пор,
пока множество не пусто, будем извлекать из него случайный элемент. Текущая
длина последовательности, которую можно с ним собрать равна 1 (сам элемент).
Сначала последовательно извлекаем все элементы, которые находятся справа
от текущего, если они есть в множестве. Для этого ставим curr на num + 1,
а при каждом извлечении увеличиваем curr на 1 и наращиваем общую длину.
Аналогично ищем элементы слева от num. Затем обновляем ответ и берем следующий
элемент.

Лучшее решение: 39 ms, 33.09 Mb
"""


class Solution:

    def longestConsecutive(self, nums: list[int]) -> int:
        set_nums = set(nums)
        ans = 0
        while set_nums:
            num = set_nums.pop()
            curr = num + 1
            curr_len = 1
            while curr in set_nums:
                set_nums.remove(curr)
                curr += 1
                curr_len += 1
            curr = num - 1
            while curr in set_nums:
                set_nums.remove(curr)
                curr -= 1
                curr_len += 1
            ans = max(ans, curr_len)
        return ans
