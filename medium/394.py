"""
Decode String.

Строка состоит из маленьких английских букв, цифр и квадратных скобок. Запись
3[ab] означает строку ababab, то есть подстрока в скобках повторояется
заданное перед скобками число раз. Скобки могут быть вложены друг в друга.
Необходимо декодировать строку.

В стек кладем все подстроки, числа и открывающие скобки. Закрывающая скобка
выталкивает в переменную curr все подстроки до открывающей скобки. Эти
подстроки объединяются. Последняя открывающая скобка удаляется из стека, а
полученная строка умножается на последнее число в стеке и кладется в стек.
После прохождения цикла все строки в стеке соединяются.

Лучшее решение: 0 ms, 17,75 Mb
"""


class Solution:

    def decodeString(self, s: str) -> str:
        stack = []
        num = ''
        for e in s:
            if e.isdigit():
                num += e
            elif e != ']':
                if num:
                    stack.append(int(num))
                    num = ''
                stack.append(e)
            else:
                curr = []
                while stack[-1] != '[':
                    curr.append(stack.pop())
                curr = ''.join(curr[::-1])
                stack.pop()
                curr = stack.pop() * curr
                stack.append(curr)
        return ''.join(stack)
