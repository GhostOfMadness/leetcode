"""
House Robber.

Дан массив nums, представляющий собой количество денег в каждом из домов на
улице. Найти наибоьшую сумму денег, которую может украсть грабитель, если
ему нельзя заходить в соседние дома от ограбленного.

Используем динамическое программирование. dp[i] = max(dp[:i-1]) + nums[i],
то есть количеству денег в текущем доме и лучшей комбинации домов, которые
не являются соседними.

Лучшее решение: 0 ms, 17.54 Mb
"""


class Solution:

    def rob(self, nums: list[int]) -> int:
        n = len(nums)
        if n == 1:
            return nums[0]
        dp = [0] * n
        dp[0] = nums[0]
        dp[1] = nums[1]
        for i in range(2, n):
            dp[i] = nums[i] + max(dp[:i-1])
        return max(dp)
