"""
Number of Zero-Filled Subarrays.

Дан массив целых чисел. Найти количество подмассивов, состоящих из нулей.
Под подмассивом понимается непрерывная последовательность исходного массива.
Например, nums = [1, 2, 0, 0, 0, 3, 0]. Есть 4 подмассива из одного нуля,
2 подмассива из двух нулей и 1 подмассив из трез нулей. Ответ 7.

Сначала находим индекс первого вхождения нуля в массив. Проверяем все
элементы, начиная с этого индекса. Если элемент равен нулю, то увеличиваем
счетчик на 1. В ином случае, прибавляем к ответ сумму чисел натурального ряда
от 1 до cnt и обнуляем счетчик. Например, cnt = 4, значит имеем [0, 0, 0, 0].
Здесь 4 окна по 1 элементу, 3 окна по 2 элемента, 2 окна по 3 элемента
и 1 окно из 4-х элементов, всего 4 + 3 + 2 + 1 = 4 * 5 // 2 = 10. Точнее
прибавляем к ответу удвоенную сумму. После прохождения цикла делим весь
ответ на 2.

Лучшее решение: 20 ms, 28.49 Mb
"""


class Solution:

    def zeroFilledSubarray(self, nums: list[int]) -> int:
        ans = 0
        cnt = 0
        n = len(nums)
        start = n
        for i in range(n):
            if nums[i] == 0:
                start = i
                break
        for e in nums[start:]:
            if e == 0:
                cnt += 1
            else:
                ans += cnt * (cnt + 1)
                cnt = 0
        ans += cnt * (cnt + 1)
        return ans >> 1
