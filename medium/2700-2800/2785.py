"""
Sort Vowels in a String.

Дана строка s, состоящая из букв английского алфавита в верхнем и нижнем
регистре. Необходимо получить новую строку t, в которой согласные буквы стоят
на тех же позициях, что и в s, то есть s[i] == t[i], а гласные буквы
отсортированы по возрастанию ASCII-кода. Например, если s = 'lEetcOde', то
t = 'lEOtcede' (у заглавных букв код меньше, чем у строчных).

Сначала собираем все гласные буквы в массив и сортируем его по убыванию
ASCII-кода. Проходимся по каждой букве исходной строки. Если это согласная,
то добавляем ее в ответ, если гласная - берем последний элемент из
отсортированного массива гласных (для этого сортируем в обратном направлении,
чтобы использовать метод pop()).

Лучшее решение: 59 ms, 19.80 Mb
#string #sorting
"""


class Solution:

    def sortVowels4(self, s: str) -> str:
        vowels_set = set('aeiouAEIOU')
        vowels = [e for e in s if e in vowels_set]
        vowels.sort(reverse=True)
        return ''.join(vowels.pop() if e in vowels_set else e for e in s)
