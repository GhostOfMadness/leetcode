"""
Rotate Image.

Необходимо повернуть квадратную матрицу n * n на 90 градусов по часовой
стрелке. Все изменения внутри исходной матрицы, без создания новой.

При повороте на 90 градусов элемент (i, j) переместится на позицию
(j, n - 1 - i), n - размер матрицы. В квадрате 4 стороны, то есть
последовательно делаем 4 таких перемещения. За 1 итерацию внешнего цикла
как бы поворачиваем рамку вокруг еще не измененных значений. Таким образом,
после каждой итерации задача сокращается на 2 строки, поэтому проходим только
по первым n // 2 строкам. j проходит от i до n - i - 1, так как последний
элемент в строке после первой итерации внутреннего цикла уже будет изменен.

Лучшее решение: 0 ms, 17.83 Mb
"""


class Solution:

    def sol(self, matrix: list[list[int]]) -> None:
        n = len(matrix)
        for i in range(n // 2):
            for j in range(i, n - 1 - i):
                val = matrix[i][j]
                curri = i
                currj = j
                for _ in range(4):
                    newi = currj
                    newj = n - 1 - curri
                    newval = matrix[newi][newj]
                    matrix[newi][newj] = val
                    val = newval
                    curri = newi
                    currj = newj
