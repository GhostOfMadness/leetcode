"""
Power of Two.

По данному целому числу n сказать, является ли оно степенью двойки.

Через цикл: установить начальное значение степени двойки на 1 и делать битовый
сдвиг влево на 1 до тех пор, пока получаемая степень меньше n. Вернуть
результат two_pow == n.

Через биты: вернуть True, если число положительное и битовое И n и n - 1 равно
0. У степени двойки только старший бит равен 1. Если вычесть 1, то получим
число, состоящее только из единичных битов, причем общее число битов на 1
меньше, чем у степени двойки. Поэтому при побитовом И получается 0.

Лучшее решение: 0 ms, 17.73 Mb
"""


class Solution:

    def isPowerOfTwo(self, n: int) -> bool:
        two_pow = 1
        while two_pow < n:
            two_pow <<= 1
        return two_pow == n

    def isPowerOfTwo_full_bit(self, n: int) -> bool:
        return n > 0 and n & (n - 1) == 0


if __name__ == '__main__':
    res = Solution()
    print(res.isPowerOfTwo(-8))
