"""
Subarray Sum Equals K.

Найти количество подмассивов, сумма элементов в которых равна k. Числа
в массиве могут быть отрицательными.

Используем префиксные суммы. Заведем словарь h, в котором будем хранить
частоту уникальных значений префиксов. Последовательно идем по элементам
и наращиваем префиксную сумму. Зная префиксы, можно легко найти сумму на
конкретном отрезке. Например, сумма на отрезке [i, j] определяется как
prefix[j] - prefix[i - 1]. Нужно найти подмассивы, сумма которых равна k,
значит prefix[j] - prefix[i - 1] = k, prefix[i - 1] = prefix[j] - k.
Если в словаре к текущему моменту есть значение prefix[j] - k, то есть
и подмассив с нужной суммой. Значит к ответу добавляем частоту prefix[j] - k.
После прохода по всем элементам добавляем к ответу частоту k в h.

Лучшее решение: 27 ms, 20.27 Mb
"""


class Solution:

    def subarraySum(self, nums: list[int], k: int) -> int:
        h = dict()
        prefix = 0
        ans = 0
        for e in nums:
            prefix += e
            ans += h.get(prefix - k, 0)
            h[prefix] = h.get(prefix, 0) + 1
        return ans + h.get(k, 0)
